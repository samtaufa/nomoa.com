<!DOCTYPE public "-//w3c//dtd html 4.01 transitional//en"
		"http://www.w3.org/TR/html4/loose.dtd">
<html>
  <head>
    <title>=8> nomoa.com/bsd OpenBSD - Serving Mail
    </title>
    <link rel="STYLESHEET" type="text/css" href="openbsd.css">
<script language="JavaScript">
<!--

function newImage(arg) {
	if (document.images) {
		rslt = new Image();
		rslt.src = arg;
		return rslt;
	}
}

function changeImages() {
	if (document.images && (preloadFlag == true)) {
		for (var i=0; i<changeImages.arguments.length; i+=2) {
			document[changeImages.arguments[i]].src = changeImages.arguments[i+1];
		}
	}
}

var preloadFlag = false;
function preloadImages() {
	if (document.images) {
		openbsd_over = newImage("mmedia/openbsd-over.gif");
		openbsd_down = newImage("mmedia/openbsd-down.gif");
		preloadFlag = true;
	}
}

// -->
</script>
<!-- End Preload Script -->
</head>

<body bgcolor="#FFFACD" onLoad="preloadImages();">
<p class="logo">
<a class="anchBlue" href="http://www.nomoa.com/bsd" 
   onMouseOver="changeImages('openbsd', 'mmedia/openbsd-over.gif'); return true;"
   onMouseOut="changeImages('openbsd', 'mmedia/openbsd.gif'); return true;"
   onMouseDown="changeImages('openbsd', 'mmedia/openbsd-down.gif'); return true;"
   onMouseUp="changeImages('openbsd', 'mmedia/openbsd-over.gif'); return true;">
   <img name="openbsd"  align="absMiddle" 
        alt="OpenBSD ... The Only way to Go ..." border="0" height="50"
        src="mmedia/openbsd.gif" width="368"></a>
</p>
  
    <h1>
      Mail Service - Server
    </h1>
    <hr color="fuchsia">
    <p>
      Table of Contents:
    </p>
    
<ul>
  <li><a href="#introduction">Introduction</a></li>
  <li> <a href="#smtp">Process Queued Mail and Recieve incoming Mail</a> 
    <ul>
      <li><a href="#inetd">the inetd (alternative)</a></li>
    </ul>
  </li>
  <li> <a href="#pop">Processing pop requests </a> 
    <ul>
      <li><a href="#imap">using the IMAP Toolkit (alternative)</a></li>
    </ul>
  </li>
  <li><a href="#configure">Sendmail Configuration </a> 
    <ul>
      <li><a href="#whoami">who am i?</a></li>
      <li><a href="#slow">slow startup - gethostbyname() blocks</a> </li>
      <li><a href="#relay">Relaying Access Denied</a></li>
    </ul>
  </li>
  <li><a href="#diag">Simple Diagnostics</a>
    <ul>
      <li><a href="#diagWhat">What's in the QUEUE</a></li>
      <li><a href="#diagDebug">Debug and Verbose Mode</a></li>
      <li><a href="#diagMX">Looking up MX Records</a></li>
    </ul>
  </li>
  <li><a href="#author">Author and Copyright</a></li>
</ul>
    <hr color="fuchsia">
<h2><a name="introduction"></a>Introduction</h2>
<p>E-Mail services on the Internet exchange messages through a clients/servers 
  mechanism where the client sends and retrieves mail from servers who store these 
  messages for future forwarding (store and forward.) Three components of e-mail 
  (as noted above) is the service for (a) clients to recieve their mail (b) servers 
  to recieve mail from clients 'store', and (c) servers to 'forward' stored mail. 
</p>
    
<p> The default mail server (sendmail) installed with OpenBSD can be activated 
  for processing incoming and queues by reviewing the /etc/rc.conf file.</p>
    
<p>In this instruction sheet we will take a look at the postfix mail server, which 
  we have been playing with for a while.</p>
<p> 1. Setup services to process the SMTP as well as forwarding Mail Queues <br>
  2. Setup services for Processing POP </p>
<p>a) Install the package</p>
<p>b) </p>
    <h2><a name="smtp"></a>Process Queued Mail and Recieve incoming Mail    </h2>
	
    <table>
      <tr>
        
    <td class="pFileReference" valign="top"> File: /etc/rc.conf </td>
        <td class="pFileReference"  valign="top">
          enable/disable sendmail in this configuration file
        </td>
      </tr>
      <tr>
        
    <td class="pFileReference" valign="top"> File: /etc/rc </td>
        <td class="pFileReference">
          launches sendmail using the switches specified in /etc/rc.conf
        </td>
      </tr>
    </table>
    <p>
      sendmail is installed as part of the base installation of OpenBSD 2.6 and 2.7. To have sendmail service smtp
      queries, we make changes to the /etc/rc.conf file.
    </p>
    <p class="pFileReference">
      File: /etc/rc.conf
    </p>
    
<p> change the line that reads <br>
</p>
    
<table width="80%" border="0" class="Code">
  <tr>
    <td class="Code" nowrap>sendmail="-q30m" &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      # for normal use: "-bd -q30m" </td>
  </tr>
</table>
<p> to be <br>
</p>
    
<table width="80%" border="0" class="Code">
  <tr> 
    <td class="Code" nowrap>sendmail="<strong>-bd</strong> –q30m"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      # for normal use: "-bd -q30m" </td>
  </tr>
</table>
<p>
      The line specifies switches (command line options) that /etc/rc will pass sto sendmail during system startup. 
      <b>–bd</b> tells sendmail to run as a daemon, running in the background, listening for and handling incoming SMTP
      connections. As a daemon, sendmail does a listen(2) on TCP port 25 for incoming SMTP messages. When another site
      connects to the listening daemon, the daemon performs a fork(2) and the child handles receipt of the incoming
      mail message. This is the preferred method for high use (smtp) servers.
    </p>
    <p>
       The /etc/rc file checks for the value of the above 'options' and if options exist the /etc/rc will execute
      sendmail with the given options.
    </p>
    <p>
      Further Documentation ? The Sendmail Operations Manual has a number of suggested recommendations, scripts clearly
      described for starting sendmail as an smtp service.
    </p>
    <p>
       In a LAN only mail setup the queuing may not be necessary. The Sendmail bat book suggests 1h is a good setting
      for most sites, and for sites with few users –q15m may be appropriate to ensure immediate delivery of mail.
    </p>

<h3 style="MARGIN-LEFT: 0.5cm"><a name="inetd"></a>Starting sendmail - the inetd alternative </h3>
   
    
<p style="MARGIN-LEFT: 1cm"> An alternative method for starting sendmail to process 
  smtp requests is to use the inetd super server to launch sendmail on an as need 
  basis. </p>
    <p style="MARGIN-LEFT: 1cm">Add a line (or modify an existing line) so that smtp 
  requests causes an action by inetd </p>
<p class="pScreenOutput" style="MARGIN: 0cm -0.05pt 6pt 1cm"> </p>
<p class="pFileReference" style="MARGIN-LEFT: 1cm">File: /etc/inetd.conf </p>
<table class="Code" width="800">
  <tr><td nowrap>
<p style="MARGIN-LEFT: 1cm" class="Code"> smtp&nbsp;&nbsp; stream&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tcp&nbsp;&nbsp; 
  nowait root /usr/sbin/sendmail sendmail –bs </p>
</td></tr>
</table>
    <p style="MARGIN-LEFT: 1cm">
      The line tells inetd to launch sendmail on smtp requests. Verify that sendmail exists in the /usr/sbin folder.
      The “-bs” command tells sendmail to (a) be launched in “SMTP on standard input” (b) collect SMTP message over its
      standard input/output (c) deliver the message, and exit
    </p>
    <p style="MARGIN-LEFT: 1cm">
      Note that the above command does not specify when to process queued messages.
    </p>
    <p style="MARGIN-LEFT: 1cm">
      Force inetd to reload and read the new configuration by using the below command.
    </p>
    
<p style="MARGIN-LEFT: 1cm" class="Code"> &nbsp;# <b>kill –HUP `cat /var/run/inetd.pid` 
  </b> </p>
    
<p style="MARGIN-LEFT: 1cm"> Note (alternative SMTP processor): OpenBSD 2.7 (2.6?) 
  ships with the Obtuse Systems SMTPD message storing daemon (/usr/libexec/smtpd) 
  and the Obtuse Systems SMTPFWDD message forwarding daemon (/usr/libexec/smtpfwdd). 
  I haven't used it but it is documented in the man pages and http://www.obtuse.com/smtpd.html 
</p>
	
    <h2><a name="pop"></a>Processing pop requests    </h2>
	
    
<p class="pFileReference"> Package: popa3d-0.3.tgz&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
  <i>(OpenBSD 2.6 or popa3d-0.4.tgz in OpenBSD 2.7)</i> </p>
    
<p class="pFileReference"> source-file: cucipop-1.31.tar.gz&nbsp;&nbsp;&nbsp; 
  (<i>available from the distfiles directory)</i> </p>
    <p>
      The simplest, fastest way to install the pop daemon is to install the popa3d-0.4.tgz package using pkg_add
    </p>
    
<p class="Code"> # <b>pkg_add /<font color="#0000FF">[path-to-package]</font>/popa3d-0.4.tgz 
  </b> </p>
    <p>
      pkg_add&nbsp;extracts the files and documentation from the popa3d package and specifically places the binary
      popa3d into the /usr/local/libexec directory. Verify the location of popa3d file.
    </p>
    
<p> Now we need to configure the super server inetd to route pop requests to be 
  handled by our installed pop daemon. To do this we make the following changes. 
</p>
    <p class="pFileReference">
      File: /etc/services - Make sure there exists a line specifying port address 110 as a pop3 service
    </p>

    <br>
<table class="Code" width="800">
  <tr>
    <td nowrap> 
      <p style="MARGIN-LEFT: 1cm" class="Code">pop3&nbsp;&nbsp;&nbsp;&nbsp; 110/tcp<span style="mso-tab-count:
      2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; # Post Office 
        Protocol 3 <br>
        pop3&nbsp;&nbsp;&nbsp;&nbsp; 110/udp</span> </p>
    </td>
  </tr>
</table>
<p class="pFileReference">&nbsp;
      
    </p>
    <p class="pFileReference">
      File: /etc/inetd.conf - Make sure you have a line specifying the pop services (pop3) and the responsibility for
      handling it is popa3d as shown in this example.
    </p>
    
<p class="pFileReference">&nbsp; </p>
    <table class="Code" width="800">
  <tr>
    <td nowrap> 
      <p style="MARGIN-LEFT: 1cm" class="Code">pop3&nbsp;&nbsp;&nbsp;&nbsp; stream 
        tcp&nbsp; nowait&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; root&nbsp; /usr/local/libexec/popa3d 
        popa3d </p>
    </td>
  </tr>
</table>
<p>
      After making the changes, force inetd to re-read its configuration file by sending it the hang up signal.
    </p>
    
<p class="Code"> # <b>kill –HUP `cat /var/run/inetd.pid` </b> </p>
    <p>
      We now have a functioning smtp server (sendmail) and a functioning pop server (popa3d) Mail should be recieved
      and delivered on your mail-server.
    </p>

<h3><a name="imap"></a>pops and handling IMAP requests (alternative) </h3>
 
<p class="pFileReference"">source-file: imap-4.7c2.tar.Z<i>(available 
  from the distfiles directory)</i> </p>
<p>The UW IMAP Toolkit provides an IMAP server, necessary for advanced mailing 
  options required by Web Based Mail services such as IMP and TWIG. There are 
  security concerns (for some) with the UW imap installation, be concerned and 
  review the web information available. The following is the process for installing 
  and configuring an IMAP server: </p>
    
<p> (1) extract the source code, <br>
  (2) compile/make the binaries and <br>
  (3)&nbsp;copy the binaries to where other OpenBSD system tools expect the files. 
  <br>
  (4) edit configuration files <br>
  (5) restart the inetd super-server </p>
    
<p style="MARGIN-LEFT: 1cm"> <b>(1) </b>Extract the source code, untar the distribution 
</p>
    
<p class="Code" style="MARGIN-LEFT: 1cm"> # <b>cd /usr/src</b> <br>
  # <b>tar -zxf /<font color="#0000FF">[path-to-tar-source]</font>/imap-4.7c2.tar.Z 
  </b><br>
  # <b>cd imap-4.7c2 </b></p>
    
<p style="MARGIN-LEFT: 1cm"> <b>(2)</b> Make/Compile the binaries. We use "bso" 
  to specify building for OpenBSD and the make process creates sub-directories 
  c-client, ipopd and imapd where it makes the binaries to be used. <b>(3)</b> 
  After building we need to move the daemon files where we want to set up processing, 
  I have chosen /usr/local/libexec because that's where the package system put 
  the popa3d daemon so I hope I'm following some sort of standard with the file 
  placement. </p>
    
<p class="Code" style="MARGIN-LEFT: 1cm"> # <b>make bso</b> <br>
  # <b>mv ipopd/ipop2d /usr/local/libexec</b> <br>
  # <b>mv ipopd/ipop3d /usr/local/libexec</b> <br>
  # <b>mv imapd/imapd /usr/local/libexec</b> </p>
    
<p style="MARGIN-LEFT: 1cm" class="pFileReference">[ref: <a href="http://faq.horde.org">IMP 
  FAQ</a>]</p>

<p style="MARGIN-LEFT: 1cm"> <b>Optional</b>: The next part is not necessary for 
  mail delivery, but for compiling programs that need c-client (IMAP) support. 
  The same results should be achievable by installing the c-client packages and 
  copying only the *.h files described below.</p>
<p style="MARGIN-LEFT: 1cm">Compiling IMAP support into programs will require 
  the c-client header files in a 'standard' location and c-client library files. 
  An example when these files are needed is if you compile php with IMAP support.</p>

<table class="Code" width="800">
  <tr> 
    <td nowrap> 
      <p style="MARGIN-LEFT: 1cm" class="Code"># <b>cp c-client/c-client.a /usr/local/lib</b> 
      </p>
      <p style="MARGIN-LEFT: 1cm" class="Code"># <b>cp src/c-client/rfc822.h /usr/local/include</b> 
      </p>
      <p style="MARGIN-LEFT: 1cm" class="Code"># <b>cp src/c-client/mail.h /usr/local/include</b> 
      </p>
      <p style="MARGIN-LEFT: 1cm" class="Code"># <b>cp c-client/linkage.h /usr/local/include 
        </b> </p>
      <p style="MARGIN-LEFT: 1cm" class="Code">&nbsp;</p>
      <p style="MARGIN-LEFT: 1cm" class="Code"># <b>ln -s /usr/local/lib/c-client.a 
        /usr/local/lib/libc-client.a</b></p>
</td>
  </tr>
</table>
<p style="MARGIN-LEFT: 1cm"> <b>Optional</b>: Documentation for IMAP is included 
  with the source distribution and since I regularly clean out my /usr/src directories 
  it would be good to manually copy the documentation to another location: </p>
    
<p class="Code" style="MARGIN-LEFT: 1cm"> # <b>mkdir /usr/share/doc/imap-4.7c2</b> 
  <br>
  # <b>mv README* /usr/share/doc/imap-4.7c2</b><br>
  # <b>cd docs</b><br>
  # <b>mv * /usr/share/doc/imap-4.7c2</b> </p>

    <p style="MARGIN-LEFT: 1cm"> <b>(4)</b> Update the files /etc/services and /etc/inetd.conf 
  where necessary (the files should be something similar to the following files.) 
</p>
    
<p class="pFileReference" style="MARGIN-LEFT: 1cm"> Review the file: /etc/services 
  which should already have lines like the following: </p>
    
<table border="0" width="482" class="pScreenOutput">
  <tr>
    <td nowrap>
      <p class="pScreenOutput">pop2&nbsp;&nbsp;&nbsp;&nbsp; 109/tcp&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
        # Post Office Protocol 2 <br>
        pop2&nbsp;&nbsp;&nbsp;&nbsp; 109/udp <br>
        pop3&nbsp;&nbsp;&nbsp;&nbsp; 110/tcp&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
        # Post Office Protocol 3 <br>
        pop3&nbsp;&nbsp;&nbsp;&nbsp; 110/udp <br>
        imap&nbsp;&nbsp;&nbsp;&nbsp; 143/tcp&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
        # interactive mail access protocol 2 <br>
        imap&nbsp;&nbsp;&nbsp;&nbsp; 143/udp <br>
        imap3&nbsp;&nbsp;&nbsp; 220/udp&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
        # interactive mail access protocol 3 <br>
        imap3&nbsp;&nbsp;&nbsp; 220/tcp </p>
    </td>
  </tr>
</table>
<p class="pFileReference" style="MARGIN-LEFT: 1cm">Edit the file: /etc/inetd.conf 
  and include lines like the following </p>
<table border="0" width="800" class="Code">
  <tr> 
    <td nowrap>
      <p class="Code" style="MARGIN-LEFT: 1cm">pop2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
        stream&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tcp&nbsp;&nbsp; nowait&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
        root&nbsp;/usr/local/libexec/ipop2d&nbsp; ipop2d </p>
      <p class="Code" style="MARGIN-LEFT: 1cm"> pop3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
        stream&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tcp&nbsp;&nbsp; nowait&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
        root&nbsp;/usr/local/libexec/ipop3d&nbsp; ipop3d </p>
      <p class="Code" style="MARGIN-LEFT: 1cm"> imap&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
        stream&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tcp&nbsp;&nbsp; nowait&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
        root&nbsp;/usr/local/libexec/imapd&nbsp;&nbsp; imapd </p>
      <p class="Code" style="MARGIN-LEFT: 1cm"> imap3&nbsp;&nbsp;&nbsp;&nbsp; 
        stream&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tcp&nbsp;&nbsp; nowait&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
        root&nbsp;/usr/local/libexec/imapd&nbsp;&nbsp; imapd </p>
    
</td>
  </tr>
</table>
<p style="MARGIN-LEFT: 1cm"> <b>(5) </b>restart the inetd daemon </p>
    <p class="Code" style="MARGIN-LEFT: 1cm">
      # kill -HUP `cat /var/run/inetd.pid`
    </p>

<h5 style="MARGIN-LEFT: 1cm"> Further Information: </h5>
<p style="MARGIN-LEFT: 1cm"> The imap revision I use in this example was pulled
  down from the imap web-site (<a href="http://www.washington.edu/imap/">http://www.washington.edu/imap/</a>) 
  An earlier revision of the same release was available on the OpenBSD distfile 
  mirrors, and the current release may be there now. </p>
    
<p style="MARGIN-LEFT: 1cm"> For some reason the php compilation fails without 
  the '<b>ln -s /usr/local/lib/c-client.a usr/local/lib/libc-client.a'</b> The 
  actual file was not found on my hard disk and the closest file /usr/local/lib/libc-client4.a 
  seems to be the same file ? If the above link is not performed than the php3-3.0.16 
  fails during compilation complaining about problems with the non-existent libc-client.a 
  library. </p>

<h2><a name="configure"></a>Sendmail Configuration </h2>
 
<p>
      The following are tweaks to the configuration files to get the system working smoothly on my configuration and
      may be helpful.
    </p>
    
<table cellspacing="0" cellpadding="0">
  <tr>
        <td class="pFileReference" nowrap>
          File: /etc/mail/sendmail.cf
        </td>
        <td class="pFileReference">
        </td>
      </tr>
      <tr>
        <td class="pFileReference" nowrap>
          File: /etc/mail/relay-domains
        </td>
        <td class="pFileReference">
          List of domains for which you allow relaying through your server
        </td>
      </tr>
      <tr>
        <td class="pFileReference" nowrap>
          File: /etc/hosts
        </td>
        <td class="pFileReference">
          known hostnames
        </td>
      </tr>
      <tr>
        <td class="pFileReference" nowrap>
          File: /usr/share/sendmail/cf/
        </td>
        <td class="pFileReference">
          Sample Configuration Files for Sendmail
        </td>
      </tr>
    </table>

<h3><a name="whoami"></a>Who Am I ?</h3>

<p>Sometimes things may not be happening because you just can't tell who you are 
  (as the mail server.) To find out who sendmail things it is serving as, use 
  the following commands.</p>
<table class="Code" width="800">
  <tr> 
    <td nowrap> 
      <p style="MARGIN-LEFT: 1cm" class="Code"># sendmail -d0 &lt; /dev/null</p>
    </td>
  </tr>
</table>
<table class="pScreenOutput" width="800">
  <tr> 
    <td nowrap> 
      <p class="pScreenOutput">[ . . . stuff cut-out . . . ]</p>
      <p class="pScreenOutput">============ SYSTEM IDENTITY (after readcf) ============ 
      </p>
      <p class="pScreenOutput">(short domain name) $w = myhostname </p>
      <p class="pScreenOutput">(canonical domain name) $j = myhostname.mydomain.com 
      </p>
      <p class="pScreenOutput">(subdomain name) $m = mydomain.com </p>
      <p class="pScreenOutput">(node name) $k = myhostname </p>
      <p class="pScreenOutput">======================================================== 
      </p>
      <p class="pScreenOutput">[ . . . stuff cut-out . . . ] </p>
      <p style="MARGIN-LEFT: 1cm" class="pScreenOutput">&nbsp;</p>
    </td>
  </tr>
</table>
<p>The screen displays a number of useful information that may assist you in reviewing 
  your assumptions about what settings have been given to sendmail.</p>
    
<h3><a name="slow"></a>slow start-up gethostbyname() blocks</h3>

<p>When Sendmail starts it will try to determine the name of the server by using 
  the gethostname and getbyhostname system call. You may also need to edit the 
  /etc/hosts file for the reason specified below from the IMAP Toolkit FAQ </p>
    
<p> From the IMAP Toolkit FAQ</p>
    
<table class="pScreenOutput" width="800">
  <tr> 
    <td> 
      <p class="pScreenOutput">Q: Why isn't it showing the local host name as 
        a fully-qualified domain name? <br>
        Q: Why is the local host name in the From/Sender/Message-ID headers of 
        outgoing mail not coming out as a fully-qualified domain name? <br>
        A: Your UNIX system is misconfigured. The entry for your system in /etc/hosts 
        must have the <b>fully-qualified domain name first</b>, e.g. </p>
      <p class="pScreenOutput">&nbsp;&nbsp;&nbsp;&nbsp; 105.69.1.234 <b>bombastic.blurdybloop.com</b> 
        bombastic</p>
      <p class="pScreenOutput">&nbsp;&nbsp;&nbsp;&nbsp; </p>
      <p class="pScreenOutput"> A common mistake of novice system administrators 
        is to have the short name first, e.g. </p>
      <p class="pScreenOutput">&nbsp;&nbsp;&nbsp;&nbsp; 105.69.1.234 bombastic 
        bombastic.blurdybloop.com </p>
      <p class="pScreenOutput"">&nbsp; </p>
      <p class="pScreenOutput"> or to omit the fully qualified domain name entirely, 
        e.g. </p>
      <p class="pScreenOutput">&nbsp;&nbsp;&nbsp;&nbsp; 105.69.1.234 bombastic 
      </p>
      <p style="MARGIN-LEFT: 1cm" class="pScreenSmall">&nbsp; </p>
    </td>
  </tr>
</table>
<p> If your system pauses for a length of time when sendmail is started, the above 
  situation may be the solution for your problem. </p>
<p>Make sure we have a fully qualified domain associated with each ip address 
  used by the server. With two network cards, OpenBSD will only specify the domain 
  name for one of the network ip addresses. [Discovered the same problem with 
  Linux Mandrake 7.1] </p>
    
<p class="pFileReference"> File: /etc/hosts <br>
</p>
    
<table class="Code" width="800">
  <tr> 
    <td nowrap> 
      <p style="MARGIN-LEFT: 1cm" class="Code"># The NIC for the external connection 
        is: aaa.bbb.ccc.ddd (a legitimate ip address from my ISP) <br>
        # The NIC for the internal connection is: eee.fff.ggg.hhh (using private 
        ip address on local lan) <br>
        aaa.bbb.ccc.ddd myhost.mydomain.com myhost <br>
        eee.fff.ggg.hhh myhost.mydomain.com myhost </p>
    </td>
  </tr>
</table>
<h3><a name="relay"></a> Relaying access denied</h3>
 
<p class="pFileReference">[Ref OpenBSD <a href="http://www.openbsd.org/faq/faq10.html">FAQ 
  - 10.0 System Management</a> -&gt; <a href="http://www.openbsd.org/faq/faq10.html#10.4">10.4 
  ... Relay Access Denied ...</a>]</p>
<p>I want the server to service all smtp messages sent from users in my private-ip 
  network, regardless of where they are sending it from. To do this, we create 
  the file /etc/mail/relay-domains and include a list of the host domains we will 
  service. For example, if the server domain is mydomain.com then including mydomain.com 
  in the /etc/mail/relay-hosts file lets me smtp messages from a remote client, 
  so long as I specify my user information is @mydomain.com </p>
<p class="pFileReference"> Create or Edit: /etc/mail/relay-domains</p>
<p class="pScreenOutput"> mydomain.com </p>
<p>What we are doing above assumes the standard /etc/mail/sendmail.cf supplied 
  with the OpenBSD 2.7 install. To verify the name of the file where we can place 
  relay-domains use:</p>
<p class="Code"># <b>cat /etc/mail/sendmail.cf | grep relay-domains</b></p>
<p>and the output would be something like this (if the the sendmail.cf supports 
  relaying.)</p>
<p class="pScreenOutput"> FR-o /etc/mail/relay-domains </p>
<p>If you do not get something similar to the above, then you will have to create 
  another sendmail.cf (cf. /usr/share/sendmail) Sendmail 8.9 changes the previous 
  behaviour of Sendmail, where it now defaults to not forwarding e-mail to combat 
  bulk-mailers/spammers. So, the sendmail.cf needs to include some support for 
  relaying mail from other domains. Look at using</p>
<p class="Code"> define(confCR_FILE,`/etc/mail/relay-domains') </p>
<p>General format for the /etc/mail/relay-domains file is:</p>
<table width="95%" border="0">
  <tr> 
    <td valign="top" class="pFileReference">.mydomain.com</td>
    <td class="pFileReference">#Allow relaying for/to any host in mydomain.com</td>
  </tr>
  <tr> 
    <td valign="top" class="pFileReference">sub.mydomain.com</td>
    <td class="pFileReference">#Allow relaying for/to sub.mydomain.com and any 
      host in that domain</td>
  </tr>
  <tr> 
    <td valign="top" class="pFileReference">10.2</td>
    <td class="pFileReference">#Allow relaying from all hosts in the IP net 10.2.*.*</td>
  </tr>
</table>
<h2><a name="diag"></a>Simple Diagnostics</h2>
<p>Although sendmail is hard to grasp, there is an abundance of documentation 
  on how to use, configure, and validate your sendmail configuration. This abundant 
  information is available online and in print. The following tidbits are some 
  of the commands I've used to check my sendmail configurations, they are in no 
  special order and in many cases not cleverly written. For a list of reference 
  resoureces visit the Sendmail site <a href="http://www.sendmail.org">http//www.sendmail.org</a></p>
<h3><a name="diagWhat"></a>What's in the Queue</h3>
<p>To get a listing of mail stuck in the queue (not yet delivered and for what 
  reason) then you can use the &quot;-bp&quot; option of sendmail. For example:</p>
<table border="0" width="800" class="Code">
  <tr> 
    <td nowrap class="Code"> 
      <p>#<b> sendmail -bp</b></p>
      
    </td>
  </tr>
  <tr>
    <td nowrap class="pScreenOutput">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/var/spool/mqueue 
      (1 request)<br>
      ----Q-ID---- --Size-- -----Q-Time----- ------------Sender/Recipient------------<br>
      e6UBU7B02385&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 24 Mon Jul 31 00:30 anat@myserver.com<br>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      (host map: lookup (externalserver.com): deferred)<br>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      samt@externalserver.com </td>
  </tr>
</table>
<h3><a name="diagDebug"></a>Debugging &amp; Verbose Mode</h3>
<p>-v (verbose) -d (debug) are two modes which print extra diagnostic information 
  on the screen while processing.</p>
<p class="pScreenOutput">sendmail -v user-id &lt; info-to-send </p>
<p>The -v (verbose) option will display sendmail's activities in trying to send 
  mail to user-id. I find this especially useful when trying to understand why 
  sendmail fails trying to send to an external host. You can use a user-id on 
  another machine to watch what sendmail's doing in trying to send your mail to 
  that external host. For example:</p>
<p class="pScreenOutput">sendmail -v user-id@remotehost.com &lt; info-to-send</p>
<p>The above will display the sendmail session trying to connect to the SMTP port 
  at remotehost.com. With the details of the connection you can see any rejection 
  messages from the external host.</p>
<p class="pScreenOutput">sendmail -d## user-id &lt; info-to-send</p>
<p>The -d (debug) option (as it should) can generate a lot of information and 
  it is up to you to select the level of information that is useful for isolating 
  the cause of your problem. Further documentation should be available at http://www.sendmail.org 
  otherwise I have seen the use of -d40 (limit output to information about the 
  queue) -d0 (produce general debugging information, as shown in earlier example 
  above.)</p>
<p>To get a comprehensive listing from sendmail of the current settings, use the 
  -d option without qualifiers.</p>
<p class="Code"><b># sendmail -d < /dev/null</b></p>
<p>The screen output will display the compiled in options and some of the settings 
  configured for sendmail. This is not a comprehensive list of settings.</p>
<h3><a name="diagMX"></a>Looking Up MX records</h3>
<p class="pFileReference">[ref: dig(1)]</p>
<p>sendmail prioritises mail using the MX records given by your DNS server. It
  may be useful sometimes to verify your assumptions of what the MX records are 
  saying by interrogating the MX records with <i>dig</i>, and to follow a mail 
  message using <i>sendmail -v</i>. </p>
<table border="0" width="800" class="pScreenOutput">
  <tr> 
    <td nowrap class="Code"> #<b> dig mydomain.com mx </b> </td>
  </tr>
  <tr>
    <td nowrap class="pScreenOutput">; <<>> DiG 2.2 <<>> samnet.com mx<br>
      ;; res options: init recurs defnam dnsrch<br>
      ;; got answer:<br>
      ;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 40547<br>
      ;; flags: qr aa rd ra; Ques: 1, Ans: 2, Auth: 2, Addit: 2<br>
      ;; QUESTIONS:<br>
      ;;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mydomain.com, type = MX, class = IN<br>
      <br>
      ;; ANSWERS:<br>
      mydomain.com.&nbsp;&nbsp;&nbsp;&nbsp; 86000&nbsp;&nbsp; MX&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;50 
      mail2.mydomain.com.<br>
      mydomain.com.&nbsp;&nbsp;&nbsp;&nbsp; 86000&nbsp;&nbsp; MX&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;20 
      mail.mydomain.com.<br>
      <br>
      ;; AUTHORITY RECORDS:<br>
      mydomain.com.&nbsp;&nbsp;&nbsp;&nbsp; 86000&nbsp;&nbsp; NS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dns.mydomain.com.<br>
      mydomain.com.&nbsp;&nbsp;&nbsp;&nbsp; 86000&nbsp;&nbsp; NS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dns2.mydomain.com.<br>
      <br>
      ;; ADDITIONAL RECORDS:<br>
      mail2.mydomain.com.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 86000&nbsp;&nbsp; 
      A&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 192.168.101.130<br>
      mail.mydomain.com.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;86000&nbsp;&nbsp; 
      A&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 192.168.101.1<br>
      <br>
      ;; Total query time: 3 msec<br>
      ;; FROM: iwill to SERVER: default -- 192.168.101.1<br>
      ;; WHEN: Tue Aug&nbsp;&nbsp;1 09:06:47 2000<br>
      ;; MSG SIZE&nbsp;&nbsp;sent: 28&nbsp;&nbsp;rcvd: 140</td>
  </tr>
</table>

<h3><a name="diagMX"></a>Is IMAP Working</h3>
<p class="pFileReference">[ref: <a href="http://www.eudora.com/techsupport/kb/2139hq.html">http://www.eudora.com/techsupport/kb/2139hq.html</a>]</p>
<p>A test available on your OpenBSD box to test whether you IMAP installation is working as expected is 'telnet.' Telnet allows us to connect to the server and manually enter commands to verify its status. The simplest process is to:</p>
<li>Connect to the IMAP Server</li>
<li>Attempt a Login</li>
<li>Logout</li>

<p>If there are any problems in any of the above stages, then there is likely problems with the IMAP installation that will require further investigation (i.e. your mailer is not an issue yet.)

<h4>Connect to the IMAP Server</h4>
<p class="Code">$ telnet localhost imap</p>
<p>The above command should get some banner response if your IMAP is active, other variations of the above command are <i>telnet servername imap-port</i> such as <i>telnet example.com 143</i>. A sample response from a courier-imap server follows:</p>
<p class="pScreenOutput">$ telnet localhost imap<br>
Trying 127.0.0.1...<br>
Connected to localhost.<br>
Escape character is '^]'.<br>
* OK [CAPABILITY IMAP4rev1 UIDPLUS CHILDREN NAMESPACE THREAD=ORDEREDSUBJECT THREAD=REFERENCES SORT QUOTA IDLE STARTTLS] Courier-IMAP ready. Copyright 1998-2003 Double Precision, Inc.  See COPYING for distribution information.<p>

<h4>Attempt a Login</h4>
<p>The next thing is to attempt to login, and we do this by first prepending our command-line with a number, the command <b>login</b> followed by the <b>username</b> and then <b>password</b> then ENTER. For example</p>

<p class="Code">001 login myusername mypassword</p>

<p>In context, it will look something like this</p>
<p class="pScreenOutput">Connected to localhost.<br>
Escape character is '^]'.<br>
* OK [CAPABILITY IMAP4rev1 UIDPLUS CHILDREN NAMESPACE THREAD=ORDEREDSUBJECT THREAD=REFERENCES SORT QUOTA IDLE STARTTLS] Courier-IMAP ready. Copyright 1998-2003 Double Precision, Inc.  See COPYING for distribution information.</p>
<p class="Code"><b>001 login myusername mypassword</b></p>
<p class="pScreenOutput">login NO Error in IMAP command received by server.</p>

<p>Another response I've recieved include</p>
<p class="Code"><b>001 login myusername mypassword</b></p>
<p class="pScreenOutput">001 OK login OK</p>


<p>Apparently the number doesn't matter, I haven't read the RFC or docs, but in the example I've seen it seems good to use a sequence</p>
<h4>Logout</h4>

<p>To prevent your test session from locking up the mailbox, lets log out using the <b>logout</b> command.</p>
<p class="Code"><b>002 logout</b></p>
<p class="pScreenOutput">* BYE Courier-IMAP server shutting down<br>
002 OK LOGOUT completed<br>
Connection closed by foreign host.</p>

<p>And there we have an installed and tested, working IMAP server. We haven't tested very many features, but we do know it is up and running.</p>

<h2>Dial-Up Mail Serving?</h2>
<p>A few of the places we're working in do not have a live Internet connection,
  or prefers to process the world mail queue on a scheduled basis. On a dial-up
  class machine, we do not want the mail server attempting to send mail on every
  message and the below is one configuration that may be useful.</p>
<p>Essentially, we want the mail server to deliver local mail immediately, but
  hold all external mail until we process the queue. The concept is to define
  mail as expensive. For more details on implementation, consult the HOWTO Sendmail
  and dial-up modem internet by Wouter Hanegraaff</p>
<p>define(SMTP_MAILER_FLAGS, e)<br>
  define(`confTO_QUEUEWARN', `16h')<br>
  define(`SMART_HOST', `myISP')<br>
  MAILER(local)dnl<br>
  MAILER(smtp)dnl</p>
<p>I think from the above, smtp of local mail will get sent straight away. The<br>
  queue will only need to be processed when external mail needs to be<br>
  delivered (ie. when online)</p>
<p>From the docs:</p>
<p>Mailer Flag<br>
  e This mailer is expensive to connect to, so try to avoid connecting normally; 
  any necessary connection will occur during a queue run.</p>
<p>Options:<br>
  There are a number of global options that can be set from a configuration file. 
  Options are represented by full words; some are also representable as single 
  characters for back compatibility.</p>
<p>The syntax of this line is:<br>
  O option=value</p>
<p>This sets option option to be value. Note that there must be a space between 
  <br>
  the letter 'O' and the name of the option. An older version is:<br>
  Oo value</p>
<p>where the option o is a single character. Depending on the option, value may 
  be a string, an integer, a boolean (with legal values &quot;t&quot;, &quot;T&quot;, 
  &quot;f&quot;, or &quot;F&quot;; the default is TRUE), or a time interval.</p>
<p>The options supported (with the old, one character names in brackets) are:</p>
<p>HoldExpensive [c] If an outgoing mailer is marked as being expensive, don't 
  connect immediately. This requires that queueing be compiled in, since it will 
  depend on a queue run process to actually send the mail.</p>
<h2><a name="author"></a>Author and Copyright</h2>
<p>Copyright (c) 2000/1/2 Samiuela LV Taufa. All Rights Reserved.</p>

<p>I reserve the right to be totally incorrect even at the best advice of betters. In other words, I'm probably wrong in enough places for you to call me an idiot, but don't 'cause you'll hurt my sensibilities, just tell me where I went wrong and I'll try again.</p>

<p>You are permitted and encouraged to use this guide for fun or for profit as you see fit. If you republish this work in what-ever form, it would be nice (though not enforceable) to be credited.</p>

<table border="0" cellpadding="0" cellspacing="0" width="100%">
  <tr>
    <td class="block" valign="MIDDLE" width="100%" bgcolor="#cccccc"><strong>
      <p class="block">&nbsp;Serving Up Mail - sendmail, pop, imap OpenBSD</p>
      </strong></td>
  </tr>
</table>
<p><font color="#808080" face="sans-serif" size="-2"><strong>Copyright&nbsp; &copy; 
  2000/1/2
<a href="http://www.nomoa.com">NoMoa.COM</a> All rights reserved.</strong></font></p>

  </body>
</html>

